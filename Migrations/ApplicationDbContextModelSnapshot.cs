// <auto-generated />
using System;
using Comercial.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Comercial.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Comercial.Api.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescripcionFinal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dificultad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Duracion")
                        .HasColumnType("integer");

                    b.Property<string>("LinkImage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1082119c-1a36-48c1-bcdb-50c4e557393a"),
                            Autor = "Juan Pérez",
                            Categorias = "Programación, Desarrollo",
                            CreatedOnUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescripcionFinal = "Este curso te enseñará desde lo básico hasta temas avanzados de C#.",
                            Description = "Un curso completo sobre desarrollo de aplicaciones con C# y .NET.",
                            Dificultad = "Intermedio",
                            Duracion = 40,
                            LinkImage = "video.mp4",
                            Nombre = "Curso de Programación en C#"
                        },
                        new
                        {
                            Id = new Guid("c032c778-4699-4651-ba9a-fc0f9f0025d3"),
                            Autor = "Maria López",
                            Categorias = "Desarrollo Web, JavaScript",
                            CreatedOnUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescripcionFinal = "Al final del curso serás capaz de crear sitios web dinámicos y escalables.",
                            Description = "Aprende a desarrollar aplicaciones web interactivas usando JavaScript y frameworks modernos.",
                            Dificultad = "Avanzado",
                            Duracion = 50,
                            LinkImage = "prueba.png",
                            Nombre = "Curso de Desarrollo Web con JavaScript"
                        });
                });

            modelBuilder.Entity("Comercial.Api.Models.MediaDatos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Duracion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsReel")
                        .HasColumnType("boolean");

                    b.Property<string>("Likes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("TipoMedia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UrlMedia")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("MediaDatos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aee5a707-759b-4517-aa0a-bbd440a2debb"),
                            Categorias = "[\"Educación\", \"Tutorial\"]",
                            Comentarios = "[{\"usuario\": \"Juan\", \"texto\": \"Buen video!\", \"fecha\": \"2024-08-25T14:30:00\"}]",
                            CreatedOnUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Este es el primer video de ejemplo.",
                            Duracion = "5:00",
                            IsReel = false,
                            Likes = "[{\"userId\": \"123\", \"like\": true}, {\"userId\": \"456\", \"like\": false}]",
                            TipoMedia = "Video",
                            UrlMedia = "video.mp4"
                        },
                        new
                        {
                            Id = new Guid("cfdf5ae2-b9aa-4fb0-b6a6-4aac0008167e"),
                            Categorias = "[\"Tecnología\", \"Programación\"]",
                            Comentarios = "[{\"usuario\": \"Maria\", \"texto\": \"Muy informativo!\", \"fecha\": \"2024-08-26T10:15:00\"}]",
                            CreatedOnUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Este es el segundo video de ejemplo.",
                            Duracion = "5:00",
                            IsReel = true,
                            Likes = "[{\"userId\": \"789\", \"like\": true}]",
                            TipoMedia = "Video",
                            UrlMedia = "prueba.png"
                        });
                });

            modelBuilder.Entity("Comercial.Api.Models.ProgressCurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CantidadSesiones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PorcentajeAvanzado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("SeccionesCompletadas")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("UrlEntregable")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ProgressCursos");
                });

            modelBuilder.Entity("Comercial.Api.Models.Seccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("NumeroOrden")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SeccionPadreId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("MediaId");

                    b.HasIndex("SeccionPadreId");

                    b.ToTable("Seccions");
                });

            modelBuilder.Entity("Comercial.Api.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Colegio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Historial")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Intereses")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Comercial.Api.Models.Seccion", b =>
                {
                    b.HasOne("Comercial.Api.Models.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comercial.Api.Models.MediaDatos", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comercial.Api.Models.Seccion", null)
                        .WithMany()
                        .HasForeignKey("SeccionPadreId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
